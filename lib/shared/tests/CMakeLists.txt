set(files test.cpp)
set(target_lib libshared)
set(tests_name libshared_test)

option(SANITIZERS "Use sanitizers")
if(SANITIZERS)
    add_executable(${tests_name}_addr ${files})
    target_link_libraries(${tests_name}_addr PUBLIC ${target_lib} GTest::Main)

    add_test(NAME ${tests_name}_addr COMMAND ${tests_name}_addr)
    target_compile_options(${tests_name}_addr PUBLIC -O0 -g -static-libasan -fno-omit-frame-pointer -fsanitize=undefined -fsanitize=leak -fsanitize=address)
    target_link_options(${tests_name}_addr PUBLIC -static-libasan -fno-omit-frame-pointer -fsanitize=undefined -fsanitize=leak -fsanitize=address)

    add_executable(${tests_name}_thread ${files})
    target_link_libraries(${tests_name}_thread PUBLIC ${target_lib} GTest::Main)

    add_test(NAME ${tests_name}_thread COMMAND ${tests_name}_thread)
    target_compile_options(${tests_name}_thread PUBLIC -fno-omit-frame-pointer -O0 -g -static-libasan -fsanitize=thread)
    target_link_options(${tests_name}_thread PUBLIC -fno-omit-frame-pointer -static-libasan -fsanitize=thread)
endif()

option(TESTS "Add test target")
if(TESTS)
    add_executable(${tests_name}_tests ${files})
    target_link_libraries(${tests_name}_tests PUBLIC ${target_lib} GTest::Main)
    add_test(NAME ${tests_name}_tests COMMAND ${tests_name}_tests)
    target_compile_options(${tests_name}_tests PUBLIC -O0 -g)
endif()

option(VALGRIND "Add valgrind target")
if(VALGRIND)
    add_executable(${tests_name}_valgrind ${files})
    target_link_libraries(${tests_name}_valgrind PUBLIC ${target_lib} GTest::Main)
    add_test(NAME ${tests_name}_valgrind COMMAND ${tests_name}_valgrind)
    target_compile_options(${tests_name}_valgrind PUBLIC -O0 -g)
endif()

if(COVERAGE)
    add_executable(${tests_name} ${files})
    target_link_libraries(${tests_name} PUBLIC ${target_lib} GTest::Main)
    add_test(NAME ${tests_name} COMMAND ${tests_name})
    target_compile_options(${tests_name} PUBLIC -O0 -g -static-libasan -fno-omit-frame-pointer)
    target_link_options(${tests_name} PUBLIC -static-libasan -fno-omit-frame-pointer)
endif()